#!/bin/python3

import sys
import unittest

from collections import namedtuple, defaultdict
import re


Point = namedtuple('Point', ['x', 'y'])

directions = [Point(-1, 0), Point(0, -1), Point(1, 0), Point(0, 1)]


def distance(a, b):
    return abs(a.x - b.x) + abs(a.y - b.y)


class Sensor:
    RE = re.compile(r"Sensor at x=(?P<x>-?\d+), y=(?P<y>-?\d+): closest beacon is at x=(?P<bx>-?\d+), y=(?P<by>-?\d+)")

    def __init__(self, description, scale=1):
        m = Sensor.RE.match(description)
        if not m:
            raise ValueError(f"invalid {description=}")

        self.p = Point(int(m.group('x')) // scale, int(m.group('y')) // scale)
        self.b = Point(int(m.group('bx')) // scale, int(m.group('by')) // scale)
        self.d = abs(self.b.x - self.p.x) + abs(self.b.y - self.p.y)


    def __str__(self):
        return f"S({self.p.x},{self.p.y} [{self.d}])"

    def __repr__(self):
        return self.__str__()


class Field:
    def __init__(self, xmin, xmax, ymin, ymax, lines=None, scale=1, threshold=1):
        self.sensors = dict()
        self.beacons = set()
        self.minv = Point(xmin, ymin)
        self.maxv = Point(xmax, ymax)
        self.scale = scale
        self.threshold = threshold
        self.field = defaultdict(int)
        self.found = list()

        if lines:
            self.fill(lines)

        self.isBig = distance(self.minv, self.maxv)  > 100

    def fill(self, lines):
        for line in lines:
            self.add(Sensor(line, self.scale))

    def add(self, sensor):
        self.sensors[sensor.p] = sensor
        self.beacons.add(sensor.b)

    def paint(self):
        result = ""

        for y in range(self.minv.y, self.maxv.y+1):
            for x in range(self.minv.x, self.maxv.x+1):
                where = Point(x, y)
                if where in self.sensors:
                    result += "S"
                elif where in self.beacons:
                    result += "B"
                elif self.field[where] > self.threshold:
                    result += "#"
                elif not self.inrange(where):
                    result += "o"
                    self.found.append(where)
                else:
                    result += "."

            result += "\n"

        return result

    def getValue(self, p):
        v = 0
        for s in self.sensors.values():
            this = s.d - distance(p, s.p)
            if this > 0:
                v += this

        return v

    def inrange(self, p):
        for s in self.sensors.values():
            if distance(s.p, p) <= s.d:
                return s

        return None

    def findIsolated(self):
        seen = set()

        for s in self.sensors.values():
            print(f"{s=}")
            for x in range(max(self.minv.x, s.p.x-s.d), min(self.maxv.x, s.p.x+s.d)+1):
                drel = s.d - abs(s.p.x - x)
                if not self.isBig:
                    print(f"  {x=} {drel=}")
                for y in range(max(self.minv.y, s.p.y-drel), min(self.maxv.y, s.p.y+drel)+1):
                    if not self.isBig:
                        print(f"    {x=} {y=}")
                    self.field[Point(x, y)] += drel - abs(s.p.y - y)




if __name__ == "__main__":
    xmin, xmax, ymin, ymax = int(sys.argv[1]), int(sys.argv[2]), int(sys.argv[3]), int(sys.argv[4])

    scale = 1
    if len(sys.argv) >= 6:
        scale = int(sys.argv[5])

    threshold = 1
    if len(sys.argv) >= 7:
        threshold = int(sys.argv[6])

    xmin, xmax, ymin, ymax = xmin//scale, xmax//scale, ymin//scale, ymax//scale

    field = Field(xmin, xmax, ymin, ymax, sys.stdin.readlines(), scale, threshold)

    field.findIsolated()

    if not field.isBig:
        print(field.paint())

    print(f"{field.found=}")
    if len(field.found) == 1:
        f = field.found[0]
        print(f"{f.x * 4000000 + f.y}")


# My manual quadsection:

#  python3 main15b.py 0 4000000 0 4000000 100000 2 < input
#    ...
#    #########################################
#    #######S##############################S##
#    #########################################
#    #########################################
#    #########################################
#    #######################S#################
#    #########################################
#    #########################################
#    #########################################
#    #########################################
#    #########################################
#    #########S###############################
#    S##################################S#####
#    #########################################
#    .########################################
#    #########################################
#    ######################################S##
#    ################S########################
#    ###############################S#######S.
#    ############################.##########So
#    ####S######################SS.########...
#    ##########################....#########..
#    #########################S#...######S###.
#    ##########################....##..#####..
#    ##########################...#S#...###...
#    ##########################....##...###...
#    .#################S#######..B.##...###.S.
#    .#########################.S..##...###..B
#    .########S################....#S#######..
#    S.########################.....#####S###.
#    SB#########################..B..########.
#    ..###########################....#######.
#    .##############################.#######S#
#    ##################################S#####.
#    #####################################....
#    ##S#########################S########.B..
#    ######################S##############....
#    ########################################.
#    #########S###############################
#    ##################################S####S#
#    #########################################
#
#    field.found=[Point(x=40, y=19)]
#    160000019

#  python3 main15b.py 0 4000000 0 4000000 100000 1 < input
#    ...
#    #########################################
#    #######S##############################S##
#    #########################################
#    #########################################
#    #########################################
#    #######################S#################
#    #########################################
#    #########################################
#    #########################################
#    #########################################
#    #########################################
#    #########S###############################
#    S##################################S#####
#    #########################################
#    #########################################
#    #########################################
#    ######################################S##
#    ################S########################
#    ###############################S#######S.
#    #######################################So
#    ####S######################SS##########..
#    ###########################...##########.
#    #########################S##..######S####
#    ###########################..###########.
#    ##########################..##S########..
#    ##########################...###...###...
#    ##################S#########B.##...####S.
#    .##########################S..##########B
#    #########S################...##S########.
#    S##########################...######S####
#    SB###########################B.##########
#    .#############################.##########
#    #######################################S#
#    ##################################S######
#    ########################################.
#    ##S#########################S#########B#.
#    ######################S#################.
#    #########################################
#    #########S###############################
#    ##################################S####S#
#    #########################################
#
#    field.found=[Point(x=40, y=19)]
#    160000019

#  python3 main15b.py 2000000 4000000 2000000 4000000 100000 1 < input
#  python3 main15b.py 2000000 4000000 2000000 4000000 50000 1 < input
#  python3 main15b.py 2500000 3500000 2000000 3000000 30000 1 < input
#  python3 main15b.py 2580000 3500000 2000000 3000000 10000 1 < input
#  python3 main15b.py 2580000 3500000 2000000 3000000 20000 1 < input
#  python3 main15b.py 3200000 3500000 2500000 2700000 10000 1 < input
#  python3 main15b.py 3200000 3500000 2500000 2700000 5000 1 < input
#  python3 main15b.py 3300000 3500000 2500000 2700000 5000 1 < input
#  python3 main15b.py 3400000 3500000 2500000 2700000 5000 1 < input
#  python3 main15b.py 3400000 3500000 2600000 2700000 5000 1 < input
#  python3 main15b.py 3400000 3500000 2600000 2650000 5000 1 < input
#  python3 main15b.py 3400000 3500000 2600000 2650000 1000 1 < input
#  python3 main15b.py 3400000 3500000 2600000 2650000 1500 1 < input
#  python3 main15b.py 3400000 3450000 2600000 2680000 1500 1 < input
#  python3 main15b.py 3400000 3450000 2650000 2680000 1500 1 < input
#  python3 main15b.py 3400000 3450000 2640000 2680000 1500 1 < input
#  python3 main15b.py 3400000 3450000 2630000 2650000 1500 1 < input
#  python3 main15b.py 3400000 3450000 2630000 2650000 1000 1 < input
#  python3 main15b.py 3470000 3450000 2635000 2645000 1000 1 < input
#  python3 main15b.py 3400000 3450000 2630000 2650000 1000 1 < input
#  python3 main15b.py 3430000 3450000 2635000 2645000 1000 1 < input
#  python3 main15b.py 3430000 3450000 2635000 2645000 500 1 < input
#  python3 main15b.py 3430000 3450000 2635000 2645000 400 1 < input
#  python3 main15b.py 3430000 3440000 2638000 2642000 400 1 < input
#  python3 main15b.py 3430000 3440000 2638000 2642000 300 1 < input
#  python3 main15b.py 3430000 3440000 2638000 2642000 200 1 < input
#  python3 main15b.py 3430000 3440000 2638000 2642000 200 2 < input
#  python3 main15b.py 3435000 3440000 2638000 2640000 200 2 < input
#  python3 main15b.py 3435000 3440000 2638000 2640000 100 2 < input
#  python3 main15b.py 3435000 3437000 2639000 2640000 100 2 < input
#  python3 main15b.py 3435000 3437000 2639000 2640000 50 2 < input
#  python3 main15b.py 3435500 3436500 2639500 2640000 50 2 < input
#  python3 main15b.py 3435500 3436500 2639500 2640000 30 2 < input
#  python3 main15b.py 3435500 3436000 2639500 263980000 30 2 < input
#  python3 main15b.py 3435500 3436000 2639500 26398000 30 2 < input
#  python3 main15b.py 3435500 3436500 2639500 2640000 30 2 < input
#  python3 main15b.py 3435500 3436500 2639500 2639800 30 2 < input
#  python3 main15b.py 3435500 3436500 2639500 2639800 30 1 < input
#  python3 main15b.py 3435500 3436500 2639500 2639800 30 0 < input
#  python3 main15b.py 3435500 3436500 2639500 2639800 30 1 < input
#  python3 main15b.py 3435900 3436100 2639600 2639700 30 1 < input
#  python3 main15b.py 3435900 3436100 2639600 2639700 10 1 < input
#  python3 main15b.py 3435900 3436100 2639600 2639700 10 2 < input
#  python3 main15b.py 3435900 3436100 2639550 2639700 10 2 < input
#  python3 main15b.py 3435900 3436100 2639650 2639700 10 2 < input
#  python3 main15b.py 3435850 3436100 2639650 2639700 10 2 < input
#  python3 main15b.py 3435850 3436100 2639650 2639700 10 1 < input
#  python3 main15b.py 3435850 3436100 2639600 2639700 10 1 < input
#  python3 main15b.py 3435850 3436100 2639600 2639700 6 1 < input
#  python3 main15b.py 3435850 3436100 2639600 2639700 5 1 < input
#  python3 main15b.py 3435850 3436000 2639600 2639700 5 1 < input

#  python3 main15b.py 3435850 3436000 2639600 2639700 5 1 < input
#    ...
#    ###############################
#    ###############################
#    ###############################
#    ###############################
#    ###############################
#    ###############################
#    ###############################
#    ###############################
#    ###############################
#    ###############################
#    ######..#######################
#    ######..#######################
#    ######..#######################
#    ###############################
#    ###############################
#    ###############################
#    ###############################
#    ###############################
#    ###############################
#    ###############################
#    ###############################

#  python3 main15b.py 3435850 3435950 2639600 2639700 5 1 < input
#  python3 main15b.py 3435850 3435950 2639640 2639660 5 1 < input
#  python3 main15b.py 3435850 3435950 2639640 2639660 1 1 < input
#  python3 main15b.py 3435850 3435950 2639640 2639660 2 1 < input
#  python3 main15b.py 3435880 3435920 2639650 2639660 2 1 < input
#  python3 main15b.py 3435880 3435920 2639650 2639660 1 1 < input
#  python3 main15b.py 3435880 3435920 2639650 2639660 1 0 < input
#  python3 main15b.py 3435880 3435920 2639650 2639660 1 -1 < input
#  python3 main15b.py 3435880 3435920 2639650 2639660 1 1 < input

#  python3 main15b.py 3435880 3435920 2639650 2639660 1 0 < input
#    ...
#    #########################################
#    #########################################
#    #########################################
#    #########################################
#    #########################################
#    #########################################
#    #####.###################################
#    ####.o.##################################
#    #####.###################################
#    #########################################
#    #########################################
#
#    field.found=[Point(x=3435885, y=2639657)]
#    13743542639657
